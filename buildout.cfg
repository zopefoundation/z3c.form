[buildout]
develop = . benchmark
parts = test coverage-test coverage-report python
; # Parts with recipes not ported to Python 3:
;        test-with-z3cpt
;        checker i18n
;        chameleon-cache-dir benchmark pocompile

[chameleon-cache-dir]
recipe = z3c.recipe.dev:mkdir
path = parts/chameleon

[test-environment]
CHAMELEON_DEBUG = False
CHAMELEON_CACHE = ${buildout:directory}/parts/chameleon

[test-with-z3cpt]
recipe = zc.recipe.testrunner
eggs = z3c.form [test,extra]
environment = test-environment

[test]
recipe = zc.recipe.testrunner
eggs = z3c.form [test]

[checker]
recipe = lovely.recipe:importchecker
path = src/z3c/form

[coverage-test]
recipe = zc.recipe.testrunner
eggs = z3c.form [test]
defaults = ['--coverage', '../../coverage']
environment = test-environment

[coverage-report]
recipe = zc.recipe.egg
eggs =
    z3c.coverage
scripts = coveragereport
arguments = ('${buildout:directory}/coverage', '${buildout:directory}/coverage/report')

[pocompile]
recipe = zc.recipe.egg
eggs = zest.pocompile

[i18n]
recipe = lovely.recipe:i18n
eggs =
  zope.app.appsetup # this is needed for zcml support in the extracter
  zope.component
  zope.security
  zope.i18n
  zope.contenttype
  zope.app.pagetemplate
  zope.app.applicationcontrol
  z3c.form
package = z3c.form
domain = z3c.form
location = src/z3c/form
output = locales
zcml =
  <include package="zope.component" file="meta.zcml" />
  <include package="zope.security" file="meta.zcml" />
  <include package="zope.i18n" file="meta.zcml" />
  <include package="z3c.form" file="meta.zcml" />
  <include package="z3c.form" />

[benchmark]
recipe = zc.recipe.testrunner
environment = benchmark-environment
eggs =
   z3c.form [test,extra]
   benchmark
defaults = ['-m', 'benchmark']

[benchmark-environment]
CHAMELEON_DEBUG = False
CHAMELEON_CACHE = ${buildout:directory}/parts/chameleon

[python]
recipe = zc.recipe.egg
eggs = z3c.form
interpreter = python
